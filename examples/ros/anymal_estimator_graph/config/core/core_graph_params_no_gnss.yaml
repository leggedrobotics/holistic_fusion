# Sensor Params
sensor_params:
  imuRate: 400                            # Rate of IMU input (Hz)
  createStateEveryNthImuMeasurement: 10   # Create a new state every n-th IMU measurement
  useImuSignalLowPassFilter: false        # If true, a low pass filter is applied to the IMU measurements
  imuLowPassFilterCutoffFreq: 30.0        # Cutoff frequency of the low pass filter
  imuBufferLength: 800
  imuTimeOffset: 0.0                      # Offset between IMU and LiDAR Measurements: can be determined with rqt_multiplot

# Initialization
initialization_params:
  estimateGravityFromImu: false            # If true, the gravity is estimated in the beginning using the IMU
  gravityMagnitude: 9.80600                # If estimateGravityFromImu is false, this value is used as gravity

# Factor Graph
graph_params:
  realTimeSmootherLag: 2.0                # Lag of real-time fixed lag smoother[seconds]
  realTimeSmootherUseIsam: true
  realTimeSmootherUseCholeskyFactorization: true  # CHOLESKY faster, QR numerically more stable
  useAdditionalSlowBatchSmoother: true    # If true, a slower smoother is used in addition to the real-time smoother
  slowBatchSmootherUseIsam: false         # if false, then levenberg-marquardt is used for the slow batch smoother, NO EFFECT YET
  slowBatchSmootherUseCholeskyFactorization: false  # CHOLESKY faster, QR numerically more stable
  # Optimizer Config
  gaussNewtonWildfireThreshold: 0.001     # Threshold for the wildfire in the Gauss-Newton optimization
  minOptimizationFrequency: 1.0           # Minimum optimization frequency [Hz]
  maxOptimizationFrequency: 10.0          # Maximum optimization frequency [Hz], can be used to control computational load
  additionalOptimizationIterations: 0     # Additional iterations of graph optimizer after update with new factors
  findUnusedFactorSlots: true
  enableDetailedResults: false
  usingBiasForPreIntegration: true        # If true, the bias is used during pre-integration
  useWindowForMarginalsComputation: true  # If true, the window is used for marginal computation
  windowSizeSecondsForMarginalsComputation: 300.0   # Size of the window for marginal computation, unit: seconds
  # Alignment Parameters
  optimizeReferenceFramePosesWrtWorld: true   # If true, the poses of the fixed frames are optimized w.r.t. world
  referenceFramePosesResetThreshold: 8.0      # Reset T_M_W if distance between initial guess and optimization are too big, [SE(3) distance]
  centerMeasurementsAtKeyframePositionBeforeAlignment: true # If true, the measurements are centered before alignment
  createReferenceAlignmentKeyframeEveryNSeconds: 10000.0   # Create a new keyframe for alignment every n seconds
  # Extrinsic Calibration
  optimizeExtrinsicSensorToSensorCorrectedOffset: false # If true, the extrinsic calibration is optimized

# Noise Parameters
noise_params:
  ## IMU
  ### Position
  accNoiseDensity: 7.84e-04               # Continuous-time Noise Amplitude Spectral Density (StdDev) [m/s^2/√Hz)]
  integrationNoiseDensity: 1.0e-03        # Continuous-time Noise Amplitude Spectral Density of integration uncertainty
  use2ndOrderCoriolis: true               # Whether to use 2nd order coriolis effect
  ### Rotation
  gyrNoiseDensity: 3.4906585e-05          # Continuous-time Noise Amplitude Spectral Density (StdDev) [rad/s/√Hz]
  omegaCoriolis: 1.07e-04                 # Coriolis effect, positive on northern hemisphere, 0 at the equator, default (central europe, Switzerland): 1.07e-04
  ### Bias
  accBiasRandomWalkNoiseDensity: 1.0e-02  # Continuous-time Noise Amplitude Spectral Density of Accelerometer bias random walk [m/s^3/√Hz]
  gyrBiasRandomWalkNoiseDensity: 9.33e-03 # Continuous-time Noise Amplitude Spectral Density of Gyroscope bias random walk [rad/s^2/√Hz]
  biasAccOmegaInit: 1.0e-02               # StdDev of bias at start
  accBiasPrior: 0.0                       # Prior/starting value of accelerometer bias
  gyrBiasPrior: 0.0                       # Prior/starting value of gyroscope bias
  ## Initial State
  ### No GNSS
  initialPositionNoiseDensity: 1.0e-04    # Prior/starting value of position
  initialOrientationNoiseDensity: 1.0e-03 # Prior/starting value of orientation
  initialVelocityNoiseDensity: 1.0e-02 # Prior/starting value of velocity
  initialAccBiasNoiseDensity: 1.0e-03  # Prior/starting value of accelerometer bias
  initialGyroBiasNoiseDensity: 1.0e-03 # Prior/starting value of gyroscope bias

# Relinearization
relinearization_params:
  positionReLinTh: 1.0e-03                 # Letter "x" in GTSAM variables, Position linearization threshold
  rotationReLinTh: 1.0e-03                 # Letter "x" in GTSAM variables, Rotation linearization threshold
  velocityReLinTh: 1.0e-03                 # Letter "v" in GTSAM variables, Linear Velocity linearization threshold
  accBiasReLinTh: 1.0e-03                  # Letter "b" in GTSAM variables, Accelerometer bias linearization threshold
  gyrBiasReLinTh: 1.0e-03                  # Letter "b" in GTSAM variables, Gyroscope bias linearization threshold
  referenceFrameReLinTh: 1.0e-03           # Letter "r" in GTSAM variables, Reference frame linearization threshold, ONLY IF optimizeReferenceFramePosesWrtWorld
  calibrationReLinTh: 1.0e-03              # Letter "c" in GTSAM variables, Calibration linearization threshold, ONLY IF optimizeExtrinsicSensorToSensorCorrectedOffset
  displacementReLinTh: 1.0e-03             # Letter "d" in GTSAM variables, Displacement linearization threshold, ONLY IF optimizeExtrinsicSensorToSensorCorrectedOffset
  landmarkReLinTh: 1.0e-03                 # Letter "l" in GTSAM variables, Landmark linearization threshold
  relinearizeSkip: 1                       # Re-linearization is skipped every n-th step, default: 10
  enableRelinearization: true              # Whether to use relinearization, default: true
  evaluateNonlinearError: true             # Whether to evaluate the nonlinear error before and after the update, default: false
  cacheLinearizedFactors: true             # Whether to cache the linearized factors, default: true
  enablePartialRelinearizationCheck: false # Whether potentially only parts of the tree needs to be relinearized, default: false
